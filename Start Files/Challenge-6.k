/* File: Challenge-6.k
 ---------------------------
Suppose that it’s Halloween and Karel is going Trick-or-Treating.
Karel starts off at the west end of a dead-end street that contains
houses on both sides of street.

Each house has a front porch at some point along its front side.
Karel’s mission is to go to each house, step into the porch area,
and see if the porch contains a treat, represented by a beeper.
If it does, Karel should pick up the treat. If not, Karel should
move on to the next house. Karel must check every porch on both
sides of the street and should end up at the original intersection,
facing in the opposite direction.

Karel can count on the following facts about the world:

• Karel starts at the west end of a street, facing east,
with an empty beeper bag.

• The houses on the street are packed closely together,
with no space between adjacent houses.

• There may be any number of houses, which typically vary in size.

• The side of each house facing the street is a solid wall except
for a small porch, which is always one intersection wide. The porch
can appear at any point in the front wall.

• Each porch is either empty or marked with a single beeper representing
a Halloween treat.

• At the end of execution, Karel should return to its original intersection
at the west end of the street, but should now be facing west.
*/

import "turns";

function Solve(){
	getCandy();
}

function getCandy(){
	while(frontIsClear()){
		getACandy();
	}
}

function getACandy(){
	arriveAtPorch();
	trickOrTreat();
	returnToStreet();
	changeDirection();
	move();
}

function arriveAtPorch(){
	while(rightIsBlocked()){
		move();
	}
	turnRight();
	move();
}

function trickOrTreat(){
	if(beepersPresent()){
		pickBeeper();
	}
}

function returnToStreet(){
	turnAround();
	move();
}

function changeDirection(){
	if(rightIsClear()){
		turnRight();
	}else{
		turnLeft();
}
